<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zz.delicious.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.zz.delicious.entity.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="totalprice" jdbcType="DOUBLE" property="totalprice" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
  </resultMap>

  <resultMap id="BaseResultMap1" type="com.zz.delicious.entity.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="totalprice" jdbcType="DOUBLE" property="totalprice" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="userid" jdbcType="INTEGER" property="userid" />

    <collection property="orderdetail" resultMap="com.zz.delicious.dao.OrderdetailMapper.BaseResultMap"></collection>
  </resultMap>

  <sql id="Base_Column_List">
    id, number, totalprice, state, createtime, address, phone, userid
  </sql>
  <select id="selectByState" parameterType="com.zz.delicious.entity.Order" resultMap="BaseResultMap1">
    select * from t_order o
    inner join t_orderdetail od
    on o.id=od.orderid
    <where>
      <if test="userid!=null">
        and userid=#{userid}
      </if>
      <if test="state!=null">
        and state=#{state}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.zz.delicious.entity.Order">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="totalprice != null">
        totalprice,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="userid != null">
        userid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateById" parameterType="com.zz.delicious.entity.Order">
    update t_order
    <set>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="totalprice != null">
        totalprice = #{totalprice,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} and userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>